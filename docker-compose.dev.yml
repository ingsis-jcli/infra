
services:
  snippets:
    platform: linux/x86_64
    container_name: "infra-snippets-api"
    image: ghcr.io/ingsis-jcli/snippets-dev:latest
    environment:
      GITHUB_ACTOR: "${GITHUB_ACTOR}"
      GITHUB_TOKEN: "${GITHUB_TOKEN}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${S_POSTGRES_DB}"
      POSTGRES_HOST: "${S_POSTGRES_HOST}"
      AUTH0_AUDIENCE: "${AUTH0_AUDIENCE}"
      AUTH_SERVER_URI: "${AUTH_SERVER_URI}"
      AUTH_CLIENT_ID: "${AUTH_CLIENT_ID}"
      AUTH_CLIENT_SECRET: "${AUTH_CLIENT_SECRET}"
      PORT: "${PORT}"
      PRINTSCRIPT_URL: "${PRINTSCRIPT_URL}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
    ports:
      - "${S_PORT}:${PORT}"

  db-snippets:
    container_name: "${S_POSTGRES_HOST}"
    image: postgres:15
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${S_POSTGRES_DB}"
    ports:
      - "${S_POSTGRES_PORT}:5432"


  permissions:
    platform: linux/x86_64
    container_name: "infra-permissions-api"
    image: ghcr.io/ingsis-jcli/permissions-dev:latest
    environment:
      GITHUB_ACTOR: "${GITHUB_ACTOR}"
      GITHUB_TOKEN: "${GITHUB_TOKEN}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${P_POSTGRES_DB}"
      POSTGRES_HOST: "${P_POSTGRES_HOST}"
      PORT: "${PORT}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      AUTH0_AUDIENCE: "${AUTH0_AUDIENCE}"
      AUTH_SERVER_URI: "${AUTH_SERVER_URI}"
      AUTH_CLIENT_ID: "${AUTH_CLIENT_ID}"
      AUTH_CLIENT_SECRET: "${AUTH_CLIENT_SECRET}"
    ports:
      - "${P_PORT}:${PORT}"

  db-permissions:
    container_name: "${P_POSTGRES_HOST}"
    image: postgres:15
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${P_POSTGRES_DB}"
    ports:
      - "${P_POSTGRES_PORT}:5432"

  printscript:
    platform: linux/x86_64
    container_name: "infra-printscript-api"
    image: ghcr.io/ingsis-jcli/printscript-dev:latest
    environment:
      GITHUB_ACTOR: "${GITHUB_ACTOR}"
      GITHUB_TOKEN: "${GITHUB_TOKEN}"
      PORT: "${PORT}"
      AUTH0_AUDIENCE: "${AUTH0_AUDIENCE}"
      AUTH_SERVER_URI: "${AUTH_SERVER_URI}"
      AUTH_CLIENT_ID: "${AUTH_CLIENT_ID}"
      AUTH_CLIENT_SECRET: "${AUTH_CLIENT_SECRET}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
    ports:
      - "${PS_PORT}:${PORT}"

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

  asset-api:
    container_name: "asset_service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "${BUCKET_PORT}:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: "false"

  redis:
    container_name: "redis"
    image: redis:6-alpine
    ports:
      - "6379:6379"

  ui-service:
    platform: linux/x86_64
    container_name: "infra-ui"
    image: ghcr.io/ingsis-jcli/snippet-ui:latest
    ports:
      - "3000:80"

  nginx:
    container_name: "reverse-proxy"
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static/:/usr/share/nginx/html:ro
    depends_on:
      - ui-service
      - snippets
      - permissions
      - printscript


volumes:
  blob:
    external: false
